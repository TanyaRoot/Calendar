!function(e){var t={};function n(a){if(t[a])return t[a].exports;var o=t[a]={i:a,l:!1,exports:{}};return e[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./scripts/mains.js\nconst mains_date = new Date();\nlet options = {\n\t\t\t\t\tweekday: 'long',\n\t\t\t\t\tyear: 'numeric',\n\t\t\t\t\tmonth: 'numeric',\n\t\t\t\t\tday: 'numeric'\n\t\t\t\t\t};\nlet weekdays = ['mon', 'tue', 'wed', 'thu', 'fri', 'sut', 'sun'];\nlet days = [\"31\", \"28\", \"31\", \"30\", \"31\", \"30\",\n\t\t\t\t\t\t\"31\", \"31\", \"30\", \"31\", \"30\", \"31\"];\nlet months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\",\n\t\t\t\t\t\t\t\"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\n\n\n// CONCATENATED MODULE: ./script.js\n\n\nlet script_actualDate = new Date();\n\n//1! при загрузке страницы выдает\nwindow.onload = function() {\n  loadSomeBlocks(); //загружает несменные блоки, но с обновляшками\n  loadBlocks(new Date()); //прогружает с новой датой; 1 - актуальная, 2 - смена\n  changeMonthPrev(); //смена месяца prev\n  changeMonthNext(); //смена месяца next\n  showToday(); //подсветка текущего  дня месяца\n  // console.log('TY');\n  // daysMonth.addEventListener('click', chooseDayForLog, false); // прослушка по клику добавляет\n  // daysMonth.addEventListener('dblclick', chooseDayDelLog, false); // прослушка по 2клику убивает\n}\n\nfunction loadSomeBlocks() {\n  // nav initialization\n  var elem = document.querySelector('.sidenav');\n  var instance = M.Sidenav.init(elem, options);\n  // user drop initialization\n  var elem = document.querySelector('.dropdown-trigger');\n  var instance = M.Dropdown.init(elem, options);\n\n  //1. строка с текущей датой при загрузке календаря\n  document.getElementById('todayIs').innerHTML =\n    '<p>Today is ' + script_actualDate.toLocaleString(\"en\", options) + '</p>';\n  //2. добавляет или заменяет строчку месяц actualDate\n  document.getElementById('monthIs').innerHTML = months[script_actualDate.getMonth()];\n}\n//todayIs curr, weekday names\nfunction loadBlocks(actualDate) {\n  // console.log('actualDate111', actualDate);\n\n\t//3. получаем день недели первого числа месяца\n  let firstDay = new Date(actualDate.getFullYear(), actualDate.getMonth(), 1);\n  let lastDay = new Date(actualDate.getFullYear(), actualDate.getMonth() + 1, 0);\n  // console.log('firstDay', firstDay);\n  // console.log('lastDay', lastDay);\n  //   console.log('lastDay.getDay()', lastDay.getDay());\n\n  //создаем див daysLoad в space\n  let daysLoad = document.createElement('div');\n  daysLoad.setAttribute('id', 'daysLoad');\n    //создаем див weekdaysName в daysLoad\n  let weekdaysName = document.createElement('div');\n  weekdaysName.setAttribute('id', 'weekdaysName');\n    //создаем див daysMonth в daysLoad\n  let daysMonth = document.createElement('div');\n  daysMonth.setAttribute('id', 'daysMonth');\n\t////////////\n\tspace.appendChild(daysLoad);\n\tdaysLoad.appendChild(weekdaysName);\n\tdaysLoad.appendChild(daysMonth);\n\n  //2. прогружаем имена дней недели из массива weekdays\n  for (let i = 0; i < weekdays.length; i++) {\n    let divWeekday = document.createElement('div');\n    divWeekday.setAttribute('class', 'divWeekday');\n    divWeekday.innerHTML = weekdays[i];\n    weekdaysName.appendChild(divWeekday);\n  }\n  //3.1 добавляем пустые ячейки в начало месяца, если начало недели пн-сб\n  for (let j = 0; j < firstDay.getDay() - 1; j++) { // -1 т.к. количество пустых ячеек нужно\n    let divEmptyDay = document.createElement('div');\n    divEmptyDay.setAttribute('class', 'divEmptyDay');\n    divEmptyDay.innerHTML = \"_\"; //добавляем пустые ячейки\n    daysMonth.appendChild(divEmptyDay);\n  }\n  //3.2 добавляем пустые ячейки в начало месяца, если начало недели воскресение\n  if (firstDay.getDay() === 0) {\n    for (let j = 0; j < 6; j++) { //date\n      let divEmptyDay = document.createElement('div');\n      divEmptyDay.setAttribute('class', 'divEmptyDay');\n      divEmptyDay.innerHTML = \"_\"; //добавляем пустые ячейки\n      daysMonth.appendChild(divEmptyDay);\n    }\n  }\n  //4. прогружаем числа месяца из массива days\n  for (let i = 0; i < days[actualDate.getMonth()]; i++) { //перебирает числа из days\n    let divDay = document.createElement('div');\n    divDay.setAttribute('class', 'divDay');\n    divDay.innerHTML = i + 1; //выгружает числа типа 0+1 чётенько\n    daysMonth.appendChild(divDay);\n  }\n  // 3.3 добавление пустых ячеек в конец месяца\n  // -1 т.к. количество пустых ячеек нужно для выравнивания\n   for (let j = 7; j > lastDay.getDay(); j--) {\n    let divEmptyDay2 = document.createElement('div');\n    divEmptyDay2.setAttribute('class', 'divEmptyDay2');\n    divEmptyDay2.innerHTML = \"_\"; //добавляем пустые ячейки\n    daysMonth.appendChild(divEmptyDay2);\n  }\n\n  //proof datasave\n  changedDay();\n\n\n  // прослушки\n  daysMonth.addEventListener('click', chooseDayForLog, false); // прослушка по клику добавляет\n  daysMonth.addEventListener('dblclick', chooseDayDelLog, false); // прослушка по 2клику убивает\n}\n//подсветка текущего дня месяца\nfunction showToday() {\n  let todayDay = mains_date.getDate();\n  let actMonth = script_actualDate.getMonth();\n  let actYear = script_actualDate.getYear();\n  let chooseThisDay = [].slice.call(document.getElementsByClassName(\"divDay\"));\n  if (actMonth === mains_date.getMonth() && actYear === mains_date.getYear()) { // сравнение с текущим месяцем и годом\n    chooseThisDay.forEach(function(item, i) {\n      if (+item.innerHTML === todayDay) {\n        chooseThisDay[todayDay - 1].style = \"border: 1px solid rgb(3,155,229,0.9); border-radius: 20px; font-weight: bold\";\n      }\n    });\n  }\n}\n//смена месяца по кнопкам, +, -\nfunction changeMonthPrev() {\n  //смена месяца по клинку на левую кнопку\n  document.getElementById('buttonLeft').addEventListener('click', function() {\n    // console.log('here  <<<<<<');\n    // console.log( typeof actualDate.getMonth(), actualDate.getMonth());\n    script_actualDate.setMonth(script_actualDate.getMonth() - 1); //уменьшение месяца\n    document.getElementById('monthIs').innerHTML = months[script_actualDate.getMonth()]; //изменение строки monthIs\n    let delDiv = document.getElementById(\"daysLoad\");\n    delDiv.parentNode.removeChild(delDiv); //удаляем див daysLoad\n    loadBlocks(script_actualDate); //передаем на перезагрузку архумент с новым месяцем именно actualDate\n    let date = script_actualDate.getMonth() ;\n    // console.log('actualDate.getMonth()' ,actualDate.getMonth());\n\n    // let date1 = date.setMonth() ;\n    // console.log('date1' ,date111);\n\n      // console.log(\"actualDate3333333222\", typeof actualDate, actualDate);\n\n\n\n\n     chooseDayForLog(script_actualDate);\n    chooseDayDelLog(script_actualDate);\n\n    dateInLog(script_actualDate);\n    // dateDelFromLog(actualDate);\n    // showLog(actualDate);\n    //////?////showToday();//подсветка текущего  дня месяца\n\n  })\n}\n\nfunction changeMonthNext() {\n  //смена месяца по клинку на правую кнопку\n  document.getElementById('buttonRight').addEventListener('click', function() {\n    // console.log('here >>>>>');\n    script_actualDate.setMonth(script_actualDate.getMonth() + 1); //увеличение месяца\n    document.getElementById('monthIs').innerHTML =\n      '<span>' + months[script_actualDate.getMonth()] + '</span>'; //изменение строки monthIs\n    let delDiv = document.getElementById(\"daysLoad\");\n    delDiv.parentNode.removeChild(delDiv); //удаляем див daysLoad\n    loadBlocks(script_actualDate); //передаем на перезагрузку архумент с новым месяцем именно actualDate\n\n    chooseDayForLog(script_actualDate);\n    chooseDayDelLog(script_actualDate);\n\n    // dateInLog(actualDate);\n    // dateDelFromLog(actualDate);\n    // showLog(actualDate);\n    //////?////showToday();//подсветка текущего  дня месяца\n\n  })\n};\n\n\n\n//ТОТ САМЫЙ ЛОГ\nlet datasave = [];\nwindow.datasave = datasave;\n\n// смена стиля для даты\nfunction chooseDayForLog(e) {\n  // console.log(\"actualDate3333331111\", typeof actualDate, actualDate);\n  // console.log(\"e.target3333331111\", typeof e.target, e.target);\n  // if (e.target === undefined) {\n  //   console.log('JALLLLLL');\n  //   return\n  // }\n// debugger\n\n  if (!e.target) return\n\n  if (e.target.className === \"divDay\") {\n    // console.log(\"1\");\n    // debugger\n    e.target.style = \"background-color: rgb(60,131,249,0.6); border: 1px solid rgb(60,131,249,0.9); border-radius: 20px\";\n    // console.log('nere');\n    dateInLog(e); //добавление в массив лога\n  }\n}\n\n\n//убивает стиль\nfunction chooseDayDelLog(e) {\n\n  if (!e.target) return\n\n\n    if (e.target.className === \"divDay\") {\n    // document.oncontextmenu = function() {\n    //   return false\n    // }\n    e.target.style = \"none\";\n    dateDelFromLog(e); //удаление из массива лога\n    showToday();\n  }\n}\n\n/*\n    добавление в массив лога\n    @type event\n*/\nfunction dateInLog(popka) {\n\n  const e = popka || {}\n  if(!e.target) return\n   // console.log('e there e.target.innerHTML', e.target.innerHTML);\n   // console.log('date.getFullYear()', date.getFullYear());\n   //  console.log('date.getMonth()', date.getMonth());\n  let addThisDate = new Date(script_actualDate.getFullYear(), script_actualDate.getMonth(), e.target.innerHTML);\n  // console.log('addThisDate55555', addThisDate);\n  let check = false; // проверка на повторы\n  for (let i = 0; i < datasave.length; i++) {\n    if (addThisDate.toString() === datasave[i].toString()) {\n      check = true;\n    }\n  }\n  if (!check) {\n    datasave.push(addThisDate);\n  }\n\n// console.log(datasave);\n\n  showLog(datasave.sort(compareDate));\n}\n\n//for sort\nfunction compareDate(a, b) {\n\n// console.log(a, b);\nreturn new Date(a) - new Date(b);\n  // return new Date(a).getTime() > new Date(b).getTime();\n}\n\n//удаление из массива лога\nfunction dateDelFromLog(e) {\n  let addThisDate = new Date(script_actualDate.getFullYear(), script_actualDate.getMonth(), e.target.innerHTML); // даты \"4/27/2018\"\n  for (let i = 0; i < datasave.length; i++) {\n    if (addThisDate.toString() === datasave[i].toString()) {\n      datasave.splice([i], 1);\n    }\n  }\n  showLog(datasave);\n}\n\n//вывод лога в лог-спейс, перезаписывает массив\nfunction showLog(e) {\n  document.getElementById('showLog').innerHTML = \"\"; //need\n  for (let i = 0; i < datasave.length; i++) {\n\n    let datasaveDiv = document.createElement('div');\n    datasaveDiv.setAttribute('class', 'datasaveDiv');\n    // добавление нулей впереди одиночных number\n    let dateNum = datasave[i].getDate();\n    if (dateNum < 10) {\n      dateNum = \"0\" + dateNum;\n      // console.log(\"dateNum\", dateNum);\n    }\n    let monthNum = datasave[i].getMonth() +1;\n    if (monthNum < 10) {\n      monthNum = \"0\" + monthNum;\n      // console.log(\"monthNum\", monthNum);\n    }\n    datasaveDiv.innerHTML = dateNum +\n      \".\" + monthNum +\n      \".\" + datasave[i].getFullYear();\n    document.getElementById('showLog').appendChild(datasaveDiv);\n    // console.log('datasave', datasave);\n  }\n}\n\n function changedDay() {\n   // console.log('actualDateIfffff', actualDate);\n   // console.log('datasaveffffff[1]', datasave[1]);\n   const currentTargets = [].slice.call(document.getElementsByClassName('divDay'))\n// console.log(currentTargets);\n   for (let i =  0; i < 31; i++) { //length month there\n     let datafilter = new Date(script_actualDate.getFullYear(), script_actualDate.getMonth(), i);\n     let elem = document.getElementsByClassName('divDay');\n     // console.log('elem',elem);\n     // console.log(elem[i]);\n     for (let j = 0; j < datasave.length; j++) {\n       if (+datafilter === +datasave[j] ) {\n         currentTargets.find(i => {\n          if ( i.innerHTML === datasave[j].getDate().toString()) {\n           console.log(i);\n           i.setAttribute('class', 'divDay backStyle');\n           // debugger\n}\n         })\n         // document.getElementsByClassName('divDay').\n         // this.setAttribute('class', 'backStyle');\n       }\n     }\n\n\n\n\n\n     // for (let j = 0; j < datasave.length; j++) {\n     //   // console.log('datasave[j]', datasave[j]);\n     //   // console.log('nawooool11111');\n     //   // console.log('datasave i', datasave[j], typeof +datasave[j]);\n     //   console.log('datafilter',datafilter, typeof +datafilter);\n     //   // debugger\n     //   if (+datafilter === +datasave[j] ) {\n     //     console.log('nawooool');\n     //     // console.log('datafilter', datafilter);\n     //     // console.log('i', i);\n     //\n     //\n     //\n     //     debugger\n     //   }\n     // }\n\n\n\n\n   }\n\n\n }\n\n\n//# sourceURL=webpack:///./script.js_+_1_modules?")}]);